20230208_Bigdata

* 클래스, 모듈, 테스트, 예외처리

* 객체지향 프로그래밍
 - 목적
   코드 재사용, 중복코드 최소화를 위해 활용

 - 클래스
  : self는 기본적으로 매개변수로 반영이 되어야 한다

 - 클래스 호출
  1. 인스턴스 객체 생성 (인스턴스는 여러 개 생성 가능)
  2. 인스턴스 활용 클래스 내 함수 사용

 - 생성자(__init__)
  : 인스턴스 생성 시 자동으로 실행되는 부분
    변수 초기화, 메모리 할당 용도
    ex> def __init__(self) :

 - 소멸자(__del__)
  : 메모리에서 삭제 시 자동 실행
    파이썬은 메모리 관리가 대체로 자동적으로 이루어짐
    -> 거의 활용되지 않음
    ex> def __del__(self) :

 - (__str__)
  : 일반 문자열 반환 용도로 활용
    <__main__.myclass object at 0x000001DA03FE3C70> 형태의
    객체를 지칭하는 용도로 활용


 - 상속 
  : class 클래스명(부모클래스명)
   오버라이딩 - 부모클래스로부터 상속 받아 필요부분을 추가해
                    새로운 형태로 활용


* 모듈
 - 재사용성을 높이기 위해 활용

* 테스트 코드 적용
  - assert 조건

* 예외 처리 (try-except)


* 데이터 활용처
 - https://kosis.kr/  : 국가 통계 포털
 - https://www.data.go.kr/ : 공공데이터 포털
 - https://archive.ics.uci.edu/ml/index.php : uci 머신러닝

* 주피터 노트북에서 pip  활용
 - 셀에서 설치 시 '!'를 붙여 설치 가능!
   ex> !pip install 모듈명
 - 주피터 노트북 메인에서 Terminal을 띄워 설치