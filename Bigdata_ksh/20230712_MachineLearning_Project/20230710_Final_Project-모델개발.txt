20230626 Machine Learning Project* Deep Learing (Keras)1) 주제선정, 기획  - 주제   기상데이터를 활용한 발전량 예측    - Dataframe shape, indep-var, dep-var   Total Valiable   -> 온도, 습도, 전운량, 일사량, 강수량, 적설량, 일조시간, 발전량   Independent Valiable   -> 온도, 습도, 전운량, 일사량, 강수량, 적설량, 일조시간   Dependent Valiable   -> 발전량  - 예측모델 선정 (sklearn / keras)   1) sklearn LinearRegression 사용   -> 온도, 습도, 전운량, 일사량, 일조시간, 강수량, 적설량, 일조시간으로부터       발전량 값을 예측하는 회귀 모델   2) keras DNN 사용       시계열 요소를 반영하지 않고 위 Dependent Valiable을 활용한       발전량 예측 신경망 모델       * 특정 일사량 값들이 주어졌을 때 설비용량별 발전량 예측   3) keras RNN, LSTM       시간대별 Dependent Valiable의 변화를 통한 발전량 예측 신경망 모델       * 이전 기상 데이터 값들을 통한 미래 발전량 예측----------------------------------------------------------------------------------* Regression  - 모델 : LinearRegression, Lasso / Ridge, DNN  - 정확도 : r2 score, MAE, MSE  - Hyper-parameter : alpha(lasso/ridge), # layers / # units / optimizer (DNN)* Classification  - 모델 : DecisionTree, RandomForest, etc + DNN  - 정확도 : accuracy, f1 score, precision, recall  - Hyper-parameter : random_state, # leaves / # depth, # layers / # units / optimizer  - parameter(weight) 갯수, training / testing(inference) time* Model load / save  - Sklearn : pickle  - Keras : load_model / .save_model  함수 by keras.io 참고 사이트 (multivariate_data) https://ahnjg.tistory.com/33 https://codetorial.net/tensorflow/time_series_forecasting/forecast_a_multivariate_time_series.html https://www.kaggle.com/code/nicapotato/keras-timeseries-multi-step-multi-output----------------------------------------------------------------------------------* 데이터 수집/정제 - EDA(기초통계), 결측치 / 오류 수정, Normalization / Standardization * 발전량 데이터 불러오기  - 사내 서버 원격 접속 및 쿼리 적용   사용 모듈 : pymysql   접속 정보 : .env  - "서이 태양광 발전소"   설비용량 : 49.8kW   주소 : 경상남도 밀양시 초동면 금포리 343   rtu_id = 24   인버터 1대     - csv 파일로 저장  - 데이터 가공 필요 요소   * 누적발전량 -> 시간대별 발전량 변환  - 1단계. 전일 최대 누적 발전량 column 추가  - 2단계. 금일 누적 발전량 - 전일 최대 누적 발전량 column 추가  - 3단계. 현재 시간대 누적 발전량 기준 - 전 시간대 누적 발전량  - 통신 실패 영역 제외 상태   -> 기상 데이터 기준으로 Join   -> fillna 적용 0.00 채우기 * 기상 데이터 추가 로드  - ASOS에서 밀양시 데이터 가져오기